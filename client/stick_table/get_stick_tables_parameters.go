// Code generated by go-swagger; DO NOT EDIT.

package stick_table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetStickTablesParams creates a new GetStickTablesParams object
// with the default values initialized.
func NewGetStickTablesParams() *GetStickTablesParams {
	var ()
	return &GetStickTablesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetStickTablesParamsWithTimeout creates a new GetStickTablesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetStickTablesParamsWithTimeout(timeout time.Duration) *GetStickTablesParams {
	var ()
	return &GetStickTablesParams{

		timeout: timeout,
	}
}

// NewGetStickTablesParamsWithContext creates a new GetStickTablesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetStickTablesParamsWithContext(ctx context.Context) *GetStickTablesParams {
	var ()
	return &GetStickTablesParams{

		Context: ctx,
	}
}

// NewGetStickTablesParamsWithHTTPClient creates a new GetStickTablesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetStickTablesParamsWithHTTPClient(client *http.Client) *GetStickTablesParams {
	var ()
	return &GetStickTablesParams{
		HTTPClient: client,
	}
}

/*GetStickTablesParams contains all the parameters to send to the API endpoint
for the get stick tables operation typically these are written to a http.Request
*/
type GetStickTablesParams struct {

	/*Process
	  Process number if master-worker mode, if not all processes are returned

	*/
	Process *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get stick tables params
func (o *GetStickTablesParams) WithTimeout(timeout time.Duration) *GetStickTablesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get stick tables params
func (o *GetStickTablesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get stick tables params
func (o *GetStickTablesParams) WithContext(ctx context.Context) *GetStickTablesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get stick tables params
func (o *GetStickTablesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get stick tables params
func (o *GetStickTablesParams) WithHTTPClient(client *http.Client) *GetStickTablesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get stick tables params
func (o *GetStickTablesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProcess adds the process to the get stick tables params
func (o *GetStickTablesParams) WithProcess(process *int64) *GetStickTablesParams {
	o.SetProcess(process)
	return o
}

// SetProcess adds the process to the get stick tables params
func (o *GetStickTablesParams) SetProcess(process *int64) {
	o.Process = process
}

// WriteToRequest writes these params to a swagger request
func (o *GetStickTablesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Process != nil {

		// query param process
		var qrProcess int64
		if o.Process != nil {
			qrProcess = *o.Process
		}
		qProcess := swag.FormatInt64(qrProcess)
		if qProcess != "" {
			if err := r.SetQueryParam("process", qProcess); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
